# Generated by Django 4.0.5 on 2022-06-08 14:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EggGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('default_sprite', models.CharField(default=None, max_length=300, null=True)),
                ('female_sprite', models.CharField(default=None, max_length=300, null=True)),
                ('egg_groups', models.ManyToManyField(related_name='pokemon', to='app_api.egggroup')),
                ('games', models.ManyToManyField(related_name='pokemon', to='app_api.game')),
                ('shiny_locks', models.ManyToManyField(related_name='lockedpokemon', to='app_api.game')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
                ('pokemon', models.ManyToManyField(related_name='types', to='app_api.pokemon')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.CharField(max_length=180)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('default_odds', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('shiny_charm_odds', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('games', models.ManyToManyField(related_name='method', to='app_api.game')),
            ],
        ),
        migrations.CreateModel(
            name='Hunt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounters', models.IntegerField()),
                ('completed', models.BooleanField(default=False)),
                ('shiny_charm', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_api.game')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_api.method')),
                ('pokemon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_api.pokemon')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_api.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Following',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Follower', to='app_api.trainer')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Trainers', to='app_api.trainer')),
            ],
        ),
    ]
